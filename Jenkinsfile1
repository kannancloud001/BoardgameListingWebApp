pipeline {
    agent any
    
    tools {
        maven 'maven'
        jdk 'jdk'
    }
    
    environment {
        DOCKER_REGISTRY = '192.168.1.102:8081/repository/docker-hosted/' // Replace with your actual Nexus URL and repository name
        DOCKER_CREDENTIALS_ID = 'nexus-docker' // Replace with your Jenkins credentials ID for Nexus
        SONARQUBE_URL = 'http://192.168.1.102:9000'
        SONARQUBE_TOKEN = 'sonar-token'
        IMAGE_NAME = 'Boardgame'                   // Docker image name
        IMAGE_TAG = 'v1.0'
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                git url: 'https://github.com/kannancloud001/BoardgameListingWebApp.git', branch: 'main'
            }
        }
        
        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
        stage('Test') {
            steps {
                sh "mvn test"
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONARQUBE_TOKEN')]) {
                    sh 'mvn sonar:sonar -Dsonar.projectName=Boardgame -Dsonar.projectKey=Boardgame -Dsonar.java.binaries=target/classes -Dsonar.host.url=http://192.168.1.102:9000'
                }
            }
        }
         
        stage('Build') {
            steps {
                sh "mvn package"
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh "docker build -t ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }
        stage('Login to Nexus') {
            steps {
                script {
                    // Login to Nexus repository
                    sh "docker login ${DOCKER_REGISTRY} -u admin -p adminpassword"
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to Nexus
                    sh "docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
        
        stage('Maven Deploy') {
           steps {
              script {
                 // Deploy to Nexus repository
                 sh "mvn deploy:deploy-file -Dfile=target/my-app.jar -DrepositoryId=nexus-repo -Durl=http://192.168.1.102:8081/repository/maven-releases/"
        }
    }
}

    }  
    
}
